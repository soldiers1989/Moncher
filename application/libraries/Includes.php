<?php
/*****************************************************
 **作者：张文晓
**创始时间：2017-01-12
**描述：文件引入类，包括引用Libraries
*				引用services类，引用Models类。
*****************************************************/
class Includes{
	#.文件引用路径
	private $fileUrl='';
	private $system='';
	/**
	 ***********************************************************
	 *方法::CurrAlgor::__construct
	 * ----------------------------------------------------------
	 * 描述::文件引入类初始化方法
	 *----------------------------------------------------------
	 *参数:
	 *parm2:in--    String : fileUrl :: 文件所在位置
	 *----------------------------------------------------------
	 *返回：
	 *return:out--  无
	 * ----------------------------------------------------------
	 * 日期:2017.01.12  Add by zwx
	 ************************************************************
	 */
	function __construct($fileUrl){
		$this->fileUrl=$fileUrl;
		$this->system=count(explode('\\',$this->fileUrl))<=1?'/':'\\';
	}
	/**
	 ***********************************************************
	 *方法::CurrAlgor::libraries
	 * ----------------------------------------------------------
	 * 描述::文件引入类引入Libraries类
	 *----------------------------------------------------------
	 *参数:
	 *parm2:in--    String : name :: 引入类名称
	 *----------------------------------------------------------
	 *返回：
	 *return:out--  无
	 * ----------------------------------------------------------
	 * 日期:2017.01.12  Add by zwx
	 ************************************************************
	 */
	function libraries($name=''){
		($name=='') && die();
		$file=$this->getUrl('libraries');
		is_dir($file) && $file.=$this->system.$name.'.php';
		(file_exists($file))&& require_once($file);
	}
	/**
	 ***********************************************************
	 *方法::CurrAlgor::services
	 * ----------------------------------------------------------
	 * 描述::文件引入类引入services类
	 *----------------------------------------------------------
	 *参数:
	 *parm1:in--    String : model :: 引入模块名称
	 *parm2:in--    String : name  :: 引入类名称
	 *----------------------------------------------------------
	 *返回：
	 *return:out--  无
	 * ----------------------------------------------------------
	 * 日期:2017.01.12  Add by zwx
	 ************************************************************
	 */
	function services($name='',$model=''){
		($name=='') && die();
		$file=$this->getUrl('service',$model);
		is_dir($file) && $file.=$this->system.$name.'.php';
		(file_exists($file))&& require_once($file);
	}
	/**
	 ***********************************************************
	 *方法::CurrAlgor::models
	 * ----------------------------------------------------------
	 * 描述::文件引入类引入models类
	 *----------------------------------------------------------
	 *参数:
	 *parm1:in--    String : model :: 引入模块名称
	 *parm2:in--    String : name  :: 引入类名称
	 *----------------------------------------------------------
	 *返回：
	 *return:out--  无
	 * ----------------------------------------------------------
	 * 日期:2017.01.12  Add by zwx
	 ************************************************************
	 */
	function models($name='',$model=''){
		($name=='') && die();
		$file=$this->getUrl('models',$model);
		is_dir($file) && $file.=$this->system.$name.'.php';
		(file_exists($file))&& require_once($file);
	}
	/**
	 ***********************************************************
	 *方法::CurrAlgor:: getUrl
	 * ----------------------------------------------------------
	 * 描述::文件引入类获取需要引入类的地址
	 *----------------------------------------------------------
	 *参数:
	 *parm1:in--    String : model :: 引入模块名称
	 *parm2:in--    String : type    :: 引入类的分类
	 *----------------------------------------------------------
	 *返回：
	 *return:out--  String : url      :: 需要引入类的文件地址
	 * ----------------------------------------------------------
	 * 日期:2017.01.12  Add by zwx
	 ************************************************************
	 */
	private function getUrl($type='libraries',$model=''){
	    $urls=explode($this->system,$this->fileUrl);
		$newUrl=array();
		$index=array_search('application',$urls);
		for($i=0;$i<=$index;$i++){
		    $newUrl[]=$urls[$i];
		}
		$newUrl[]=$type;
		($type!='libraries') && $newUrl[]=($model=='')?$urls[$index+2]:$model;
		return implode($this->system,$newUrl);
	}
}
